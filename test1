////test1
int main()
{
	int arr[] = {1,2,3,4,5};
	short* p = (short*)arr;
	int i = 0;
	for (i = 0; i < 4; i++)
	{
		*(p+i) = 0;
	}
	for (i = 0; i < 5; i++)
	{
		printf("%d\n",arr[i]);
	}

	return 0;
}

//结果：0 0 3 4 5
////test2
int main()
{
	unsigned long PulArray[] = { 6,7,8,9,10 };
	unsigned long* pulPtr;
	pulPtr = PulArray;
	*(pulPtr + 3) += 3;//*(pulPtr + 3)的值由9变成了12
	printf("%d,%d\n",*pulPtr, *(pulPtr + 3));//6 12
	return 0;
}


////test3
////逆序
#include<string.h>
#include<stdio.h>
int main()
{
	char arr[10] = {0};
	gets(arr);//scanf不会读取空格之后的数据
	int left = 0;
	int right = strlen(arr) - 1;
	while (left <right)
	{
		char tmp[1] = { 0 };
		tmp[1] = arr[left];
		arr[left] = arr[right];
		arr[right] = tmp[1];
		left++;
		right--;
	}
	printf("%s\n", arr);
	return 0;
}

////test4
////逆序
//单词逆序
void reverse(char* left, char* right)
{
	assert(left);
	assert(right);
	while (left < right)
	{
		char tmp = *left;
		*left = *right;
		*right = tmp;
		left++;
		right--;
	}
}
int main()
{
	char arr[100] = {0};
	gets_s(arr);
	int len = strlen(arr);
	//1.逆序整个字符串
	reverse(arr, arr + len - 1);
	//2.逆序每个单词
	char* start = arr;
	while(*start)
	{
		char* end = start;
	while (*end!=' '&&*end!='\0')
	{
		end++;//计算单词的长度
	}
	reverse(start, end - 1);
	if(*end!='\0')
	end++;//跳过空格
	start = end; //下一个单词的位置给start
	}
	printf("%s\n",arr);
	return 0;
}


////test5
////
//最小公倍数
int main()
{
	int a = 0;
	int b = 0;
	scanf("%d %d",&a,&b);
	//int m = (a>b?a:b);
	if (b > a)
	{
		int tmp = 0;
		tmp = a;
		a = b;
		b = tmp;
	}
	int tmp = a;
	while (a%b!=0)
	{
		
		a += tmp;

	}
	printf("%d\n",a);
	return 0;
}
